package srp

import (
	"testing"
)

func TestParse(t *testing.T) {
	payloads := [][]byte{
		[]byte{0xff, 0xff, 0xff, 0xff, 0x21, 0x4c, 0x5f, 0xa0, 0x16, 0x00, 0x00, 0x00, 0x08, 0xfc, 0x89, 0xce, 0xe7, 0x99, 0x92, 0xa7, 0xc6, 0x7e, 0x10, 0x01, 0x18, 0xf8, 0xd1, 0xa3, 0x87, 0xe3, 0xdf, 0xdf, 0xfa, 0x4c, 0xd1, 0x00, 0x00, 0x00, 0x08, 0x08, 0x10, 0x06, 0x18, 0x9c, 0xd3, 0x01, 0x22, 0x07, 0x50, 0x68, 0x61, 0x6e, 0x74, 0x6f, 0x6d, 0x30, 0x02, 0x38, 0x10, 0x40, 0x01, 0x4a, 0x0e, 0x09, 0x70, 0x4c, 0xe8, 0x04, 0x01, 0x00, 0x10, 0x01, 0x10, 0xb4, 0xb5, 0xd1, 0x21, 0x58, 0x01, 0x60, 0xbd, 0xda, 0xc8, 0xef, 0x05, 0x70, 0x00, 0x7a, 0x11, 0x39, 0x30, 0x2d, 0x36, 0x31, 0x2d, 0x41, 0x45, 0x2d, 0x42, 0x33, 0x2d, 0x34, 0x32, 0x2d, 0x37, 0x39, 0x7a, 0x11, 0x30, 0x30, 0x2d, 0x31, 0x35, 0x2d, 0x35, 0x44, 0x2d, 0x34, 0x34, 0x2d, 0x38, 0x30, 0x2d, 0x41, 0x37, 0x7a, 0x11, 0x33, 0x30, 0x2d, 0x39, 0x43, 0x2d, 0x32, 0x33, 0x2d, 0x34, 0x38, 0x2d, 0x42, 0x46, 0x2d, 0x31, 0x41, 0x7a, 0x11, 0x39, 0x30, 0x2d, 0x36, 0x31, 0x2d, 0x41, 0x45, 0x2d, 0x42, 0x33, 0x2d, 0x34, 0x32, 0x2d, 0x37, 0x38, 0x7a, 0x11, 0x30, 0x30, 0x2d, 0x45, 0x30, 0x2d, 0x34, 0x43, 0x2d, 0x30, 0x31, 0x2d, 0x30, 0x43, 0x2d, 0x35, 0x38, 0x7a, 0x11, 0x39, 0x30, 0x2d, 0x36, 0x31, 0x2d, 0x41, 0x45, 0x2d, 0x42, 0x33, 0x2d, 0x34, 0x32, 0x2d, 0x37, 0x43, 0xa2, 0x01, 0x0c, 0x31, 0x39, 0x32, 0x2e, 0x31, 0x36, 0x38, 0x2e, 0x34, 0x2e, 0x34, 0x39, 0xa2, 0x01, 0x0c, 0x31, 0x39, 0x32, 0x2e, 0x31, 0x36, 0x38, 0x2e, 0x31, 0x2e, 0x31, 0x30, 0xaa, 0x01, 0x0d, 0x39, 0x30, 0x2e, 0x31, 0x32, 0x37, 0x2e, 0x32, 0x38, 0x2e, 0x31, 0x33, 0x32},
		[]byte{0xff, 0xff, 0xff, 0xff, 0x21, 0x4c, 0x5f, 0xa0, 0x18, 0x00, 0x00, 0x00, 0x08, 0xbb, 0xea, 0x8e, 0xb5, 0xc9, 0x8b, 0xf9, 0xec, 0x8a, 0x01, 0x10, 0x01, 0x18, 0xcf, 0xb7, 0xa9, 0xd5, 0x88, 0xc0, 0xb5, 0xeb, 0x9e, 0x01, 0x70, 0x00, 0x00, 0x00, 0x08, 0x08, 0x10, 0x06, 0x18, 0x9c, 0xd3, 0x01, 0x22, 0x0f, 0x44, 0x45, 0x53, 0x4b, 0x54, 0x4f, 0x50, 0x2d, 0x47, 0x38, 0x33, 0x46, 0x49, 0x49, 0x35, 0x30, 0x02, 0x38, 0x10, 0x40, 0x01, 0x4a, 0x0e, 0x09, 0x17, 0x06, 0x38, 0x1c, 0x01, 0x00, 0x10, 0x01, 0x10, 0x88, 0xe7, 0xc8, 0x2e, 0x58, 0x01, 0x60, 0x86, 0xe6, 0xcb, 0xef, 0x05, 0x70, 0x00, 0x7a, 0x11, 0x42, 0x30, 0x2d, 0x36, 0x45, 0x2d, 0x42, 0x46, 0x2d, 0x43, 0x45, 0x2d, 0x31, 0x39, 0x2d, 0x33, 0x34, 0xa2, 0x01, 0x0f, 0x31, 0x31, 0x39, 0x2e, 0x31, 0x39, 0x35, 0x2e, 0x31, 0x39, 0x33, 0x2e, 0x32, 0x33, 0x39, 0xaa, 0x01, 0x0f, 0x31, 0x31, 0x39, 0x2e, 0x31, 0x39, 0x35, 0x2e, 0x31, 0x39, 0x33, 0x2e, 0x32, 0x33, 0x39},
		[]byte{0xff, 0xff, 0xff, 0xff, 0x21, 0x4c, 0x5f, 0xa0, 0x16, 0x00, 0x00, 0x00, 0x08, 0xa3, 0xd5, 0xf6, 0xe7, 0x85, 0xc7, 0x90, 0xfb, 0x44, 0x10, 0x01, 0x18, 0x94, 0xf7, 0xb6, 0xe3, 0xcf, 0x8d, 0xe6, 0xdd, 0x30, 0xac, 0x00, 0x00, 0x00, 0x08, 0x08, 0x10, 0x06, 0x18, 0x9c, 0xd3, 0x01, 0x22, 0x03, 0x4d, 0x53, 0x49, 0x30, 0x02, 0x38, 0x10, 0x40, 0x01, 0x4a, 0x0e, 0x09, 0x33, 0x1f, 0xd3, 0x09, 0x01, 0x00, 0x10, 0x01, 0x10, 0xa8, 0xdc, 0x87, 0x21, 0x58, 0x01, 0x60, 0x86, 0xe6, 0xcb, 0xef, 0x05, 0x70, 0x00, 0x7a, 0x11, 0x30, 0x38, 0x2d, 0x44, 0x34, 0x2d, 0x30, 0x43, 0x2d, 0x38, 0x30, 0x2d, 0x33, 0x45, 0x2d, 0x35, 0x31, 0x7a, 0x11, 0x30, 0x38, 0x2d, 0x44, 0x34, 0x2d, 0x30, 0x43, 0x2d, 0x38, 0x30, 0x2d, 0x33, 0x45, 0x2d, 0x35, 0x30, 0x7a, 0x11, 0x44, 0x38, 0x2d, 0x43, 0x42, 0x2d, 0x38, 0x41, 0x2d, 0x46, 0x31, 0x2d, 0x31, 0x46, 0x2d, 0x39, 0x31, 0x7a, 0x11, 0x30, 0x38, 0x2d, 0x44, 0x34, 0x2d, 0x30, 0x43, 0x2d, 0x38, 0x30, 0x2d, 0x33, 0x45, 0x2d, 0x35, 0x34, 0x7a, 0x11, 0x30, 0x41, 0x2d, 0x44, 0x34, 0x2d, 0x30, 0x43, 0x2d, 0x38, 0x30, 0x2d, 0x33, 0x45, 0x2d, 0x35, 0x30, 0xa2, 0x01, 0x0d, 0x31, 0x37, 0x36, 0x2e, 0x37, 0x32, 0x2e, 0x31, 0x38, 0x34, 0x2e, 0x33, 0x35, 0xaa, 0x01, 0x0d, 0x31, 0x37, 0x36, 0x2e, 0x37, 0x32, 0x2e, 0x31, 0x38, 0x34, 0x2e, 0x33, 0x35},
		[]byte{0xff, 0xff, 0xff, 0xff, 0x21, 0x4c, 0x5f, 0xa0, 0x18, 0x00, 0x00, 0x00, 0x08, 0xcf, 0xc9, 0xa5, 0xfe, 0xeb, 0xe1, 0xc5, 0xb3, 0xba, 0x01, 0x10, 0x01, 0x18, 0xca, 0xef, 0xaa, 0xcf, 0xef, 0xae, 0xdc, 0xb1, 0xbf, 0x01, 0xa2, 0x00, 0x00, 0x00, 0x08, 0x08, 0x10, 0x06, 0x18, 0x9c, 0xd3, 0x01, 0x22, 0x0f, 0x44, 0x45, 0x53, 0x4b, 0x54, 0x4f, 0x50, 0x2d, 0x50, 0x45, 0x48, 0x33, 0x4c, 0x4c, 0x43, 0x30, 0x02, 0x38, 0x10, 0x40, 0x01, 0x4a, 0x0e, 0x09, 0xe5, 0x63, 0x12, 0x03, 0x01, 0x00, 0x10, 0x01, 0x10, 0xdd, 0xce, 0xcd, 0x28, 0x58, 0x01, 0x60, 0x86, 0xe6, 0xcb, 0xef, 0x05, 0x70, 0x00, 0x7a, 0x11, 0x41, 0x34, 0x2d, 0x32, 0x42, 0x2d, 0x42, 0x30, 0x2d, 0x44, 0x41, 0x2d, 0x45, 0x32, 0x2d, 0x34, 0x46, 0x7a, 0x11, 0x33, 0x30, 0x2d, 0x39, 0x43, 0x2d, 0x32, 0x33, 0x2d, 0x36, 0x41, 0x2d, 0x45, 0x39, 0x2d, 0x34, 0x31, 0x7a, 0x11, 0x31, 0x36, 0x2d, 0x32, 0x42, 0x2d, 0x42, 0x30, 0x2d, 0x44, 0x41, 0x2d, 0x45, 0x32, 0x2d, 0x34, 0x46, 0x7a, 0x11, 0x32, 0x36, 0x2d, 0x32, 0x42, 0x2d, 0x42, 0x30, 0x2d, 0x44, 0x41, 0x2d, 0x45, 0x32, 0x2d, 0x34, 0x46, 0xa2, 0x01, 0x0a, 0x31, 0x30, 0x2e, 0x30, 0x2e, 0x30, 0x2e, 0x31, 0x38, 0x38, 0xaa, 0x01, 0x0d, 0x31, 0x30, 0x37, 0x2e, 0x33, 0x2e, 0x31, 0x34, 0x32, 0x2e, 0x32, 0x31, 0x31},
		[]byte{0xff, 0xff, 0xff, 0xff, 0x21, 0x4c, 0x5f, 0xa0, 0x16, 0x00, 0x00, 0x00, 0x08, 0xab, 0xe0, 0x96, 0xf2, 0xe4, 0xf4, 0xaa, 0x92, 0x3b, 0x10, 0x01, 0x18, 0x90, 0xa7, 0xc6, 0xfc, 0xbe, 0xf9, 0xc2, 0xc4, 0x3c, 0x3f, 0x01, 0x00, 0x00, 0x08, 0x08, 0x10, 0x06, 0x18, 0x9c, 0xd3, 0x01, 0x22, 0x0f, 0x44, 0x45, 0x53, 0x4b, 0x54, 0x4f, 0x50, 0x2d, 0x44, 0x36, 0x39, 0x30, 0x4e, 0x42, 0x33, 0x30, 0x02, 0x38, 0x10, 0x40, 0x01, 0x4a, 0x0e, 0x09, 0x3b, 0x7d, 0xfb, 0x02, 0x01, 0x00, 0x10, 0x01, 0x10, 0xd7, 0xc0, 0xda, 0x30, 0x58, 0x01, 0x60, 0x85, 0xe6, 0xcb, 0xef, 0x05, 0x70, 0x00, 0x7a, 0x11, 0x30, 0x30, 0x2d, 0x30, 0x35, 0x2d, 0x39, 0x41, 0x2d, 0x33, 0x43, 0x2d, 0x37, 0x41, 0x2d, 0x30, 0x30, 0x7a, 0x11, 0x35, 0x30, 0x2d, 0x45, 0x30, 0x2d, 0x38, 0x35, 0x2d, 0x38, 0x36, 0x2d, 0x34, 0x35, 0x2d, 0x44, 0x39, 0x7a, 0x11, 0x42, 0x34, 0x2d, 0x32, 0x45, 0x2d, 0x39, 0x39, 0x2d, 0x33, 0x46, 0x2d, 0x33, 0x37, 0x2d, 0x33, 0x42, 0x7a, 0x11, 0x30, 0x30, 0x2d, 0x31, 0x35, 0x2d, 0x35, 0x44, 0x2d, 0x30, 0x30, 0x2d, 0x30, 0x41, 0x2d, 0x30, 0x30, 0x7a, 0x11, 0x30, 0x32, 0x2d, 0x30, 0x30, 0x2d, 0x34, 0x43, 0x2d, 0x34, 0x46, 0x2d, 0x34, 0x46, 0x2d, 0x35, 0x30, 0x7a, 0x11, 0x35, 0x30, 0x2d, 0x45, 0x30, 0x2d, 0x38, 0x35, 0x2d, 0x38, 0x36, 0x2d, 0x34, 0x35, 0x2d, 0x44, 0x41, 0x7a, 0x11, 0x39, 0x36, 0x2d, 0x31, 0x35, 0x2d, 0x45, 0x34, 0x2d, 0x31, 0x44, 0x2d, 0x45, 0x45, 0x2d, 0x30, 0x36, 0x7a, 0x11, 0x42, 0x34, 0x2d, 0x32, 0x45, 0x2d, 0x39, 0x39, 0x2d, 0x33, 0x46, 0x2d, 0x33, 0x37, 0x2d, 0x33, 0x39, 0x7a, 0x11, 0x35, 0x32, 0x2d, 0x45, 0x30, 0x2d, 0x38, 0x35, 0x2d, 0x38, 0x36, 0x2d, 0x34, 0x35, 0x2d, 0x44, 0x39, 0xa2, 0x01, 0x0d, 0x31, 0x39, 0x32, 0x2e, 0x31, 0x36, 0x38, 0x2e, 0x32, 0x34, 0x2e, 0x32, 0x30, 0xa2, 0x01, 0x0a, 0x31, 0x30, 0x2e, 0x30, 0x2e, 0x30, 0x2e, 0x32, 0x30, 0x33, 0xa2, 0x01, 0x09, 0x31, 0x30, 0x2e, 0x30, 0x2e, 0x37, 0x35, 0x2e, 0x31, 0xa2, 0x01, 0x0f, 0x31, 0x36, 0x39, 0x2e, 0x32, 0x35, 0x34, 0x2e, 0x32, 0x34, 0x37, 0x2e, 0x32, 0x31, 0x35, 0xa2, 0x01, 0x0d, 0x31, 0x37, 0x32, 0x2e, 0x32, 0x38, 0x2e, 0x31, 0x33, 0x2e, 0x31, 0x34, 0x35, 0xaa, 0x01, 0x0d, 0x36, 0x38, 0x2e, 0x38, 0x30, 0x2e, 0x31, 0x34, 0x35, 0x2e, 0x31, 0x38, 0x36},
		[]byte{0xff, 0xff, 0xff, 0xff, 0x21, 0x4c, 0x5f, 0xa0, 0x16, 0x00, 0x00, 0x00, 0x08, 0xa3, 0x87, 0xb1, 0xe6, 0x88, 0x95, 0xe1, 0xe9, 0x3a, 0x10, 0x01, 0x18, 0xc9, 0xd0, 0xe7, 0xe3, 0x83, 0x89, 0x9b, 0x95, 0x7a, 0x76, 0x00, 0x00, 0x00, 0x08, 0x08, 0x10, 0x06, 0x18, 0x9c, 0xd3, 0x01, 0x22, 0x10, 0x70, 0x65, 0x76, 0x65, 0x75, 0x76, 0x65, 0x2d, 0x6c, 0x69, 0x6e, 0x75, 0x78, 0x2d, 0x70, 0x63, 0x30, 0x02, 0x38, 0xc6, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x40, 0x01, 0x4a, 0x0e, 0x09, 0xd7, 0x6c, 0xe0, 0x00, 0x01, 0x00, 0x10, 0x01, 0x10, 0xda, 0xba, 0x96, 0x1f, 0x58, 0x01, 0x60, 0xb9, 0xe2, 0xd4, 0xef, 0x05, 0x70, 0x01, 0x7a, 0x11, 0x42, 0x43, 0x3a, 0x41, 0x45, 0x3a, 0x43, 0x35, 0x3a, 0x37, 0x43, 0x3a, 0x36, 0x30, 0x3a, 0x42, 0x46, 0xa2, 0x01, 0x0c, 0x31, 0x39, 0x32, 0x2e, 0x31, 0x36, 0x38, 0x2e, 0x31, 0x2e, 0x31, 0x31, 0xaa, 0x01, 0x0e, 0x39, 0x30, 0x2e, 0x31, 0x32, 0x37, 0x2e, 0x31, 0x31, 0x37, 0x2e, 0x32, 0x32, 0x34},
	}

	for _, payload := range payloads {
		srp := parse(payload)
		t.Errorf("%s\n", srp)
	}

}
